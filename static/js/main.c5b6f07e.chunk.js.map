{"version":3,"sources":["components/Layout/Box/Box.module.css","components/Navbar/Navbar.module.css","components/Navbar/Searchbar/Searchbar.module.css","services/WeatherAPIContext/initialWeatherState.ts","services/WeatherAPIContext/index.tsx","services/WeatherAPIContext/axios.ts","services/WeatherAPIContext/helpers.ts","components/WeatherPanel/WeatherDisplay/index.tsx","components/WeatherPanel/index.tsx","components/Layout/Box/index.tsx","components/Map/index.tsx","components/Navbar/Searchbar/index.tsx","components/Navbar/index.tsx","App.tsx","index.tsx","components/WeatherPanel/WeatherDisplay/WeatherDisplay.module.css"],"names":["module","exports","initialWeatherState","coord","lon","lat","weather","id","main","description","icon","base","temp","feels_like","temp_min","temp_max","pressure","humidity","visibility","wind","speed","deg","gust","clouds","all","dt","sys","type","country","sunrise","sunset","timezone","name","cod","initialWeatherAPIState","weatherData","isLoading","error","setSearchCity","city","Error","WeatherAPIContext","createContext","WeatherAPIContextProvider","children","useState","setWeatherData","setLoadingState","setError","searchCity","useEffect","errorSetter","loadingSetter","weatherDataSetter","axios","get","process","params","q","appid","lang","then","res","data","catch","err","response","finally","store","useMemo","Provider","value","kelvinToCelsius","kelvin","toFixed","WeatherDisplay","iconcode","className","styles","src","alt","list","WeatherPanel","useContext","Box","Map","style","height","width","bootstrapURLKeys","key","defaultZoom","defaultCenter","lng","center","Searchbar","searchInput","useRef","onSubmit","e","preventDefault","current","placeholder","ref","Navbar","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,UAAY,+B,mJCCjBC,EAAwC,CACnDC,MAAO,CACLC,IAAK,EACLC,IAAK,GAEPC,QAAS,CACP,CACEC,GAAI,EACJC,KAAM,GACNC,YAAa,GACbC,KAAM,KAGVC,KAAM,GACNH,KAAM,CACJI,KAAM,EACNC,WAAY,EACZC,SAAU,EACVC,SAAU,EACVC,SAAU,EACVC,SAAU,GAEZC,WAAY,EACZC,KAAM,CACJC,MAAO,EACPC,IAAK,EACLC,KAAM,GAERC,OAAQ,CACNC,IAAK,GAEPC,GAAI,EACJC,IAAK,CACHC,KAAM,EACNpB,GAAI,EACJqB,QAAS,GACTC,QAAS,EACTC,OAAQ,GAEVC,SAAU,EACVxB,GAAI,EACJyB,KAAM,GACNC,IAAK,GAGMC,EAA+C,CAC1DC,YAAajC,EACbkC,WAAW,EACXC,MAAO,KACPC,cAAe,SAACC,GACd,MAAM,IAAIC,MAAJ,sBACWD,EADX,sE,iBCxCGE,EAAoBC,wBAC/BR,GAmDaS,EA1C6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACtBC,mBACpC3C,GAF0D,mBACrDiC,EADqD,KACxCW,EADwC,OAKvBD,oBAAS,GALc,mBAKrDT,EALqD,KAK1CW,EAL0C,OAOlCF,mBAAiC,MAPC,mBAOrDR,EAPqD,KAO9CW,EAP8C,OAUxBH,mBAflB,gBAK0C,mBAUrDI,EAVqD,KAUzCX,EAVyC,KAa5DY,qBAAU,WACR,ICnBFC,EACAC,EACAC,GAFAF,EDoBIH,ECnBJI,EDoBIL,ECnBJM,EDoBIP,ECnBD,SAACP,GACJa,GAAc,GACdE,IACGC,IAjBHC,qFAiBsB,CAClBC,OAAQ,CAAEC,EAAGnB,EAAMoB,MAfHH,mCAeyBI,KAbxBJ,QAelBK,MAAK,SAACC,GACLT,EAAkBS,EAAIC,MACtBZ,EAAY,SAEba,OAAM,SAACC,GACFA,EAAIC,UACNf,EAAYc,EAAIC,SAASH,SAG5BI,SAAQ,kBAAMf,GAAc,QDOlBH,KACV,CAACA,IAIJ,IAAMmB,EAAQC,mBACZ,iBAAO,CACLlC,cACAC,YACAC,QACAC,mBAEF,CAACD,EAAOD,EAAWD,EAAaG,IAGlC,OACE,kBAACG,EAAkB6B,SAAnB,CAA4BC,MAAOH,GAChCxB,I,gBErDM4B,EAAkB,SAACC,GAE9B,MAAM,GAAN,QADgBA,EAAS,QACPC,QAAQ,GAA1B,WC+CaC,EArCwC,SAAC,GAKjD,IDrBqBC,ECqBtB,IAJJtE,QAAWG,EAIP,EAJOA,YAAaC,EAIpB,EAJoBA,KACxB6B,EAGI,EAHJA,KACAX,EAEI,EAFJA,QAEI,IADJpB,KAAQI,EACJ,EADIA,KAAMG,EACV,EADUA,SAAUD,EACpB,EADoBA,SAAUD,EAC9B,EAD8BA,WAAYG,EAC1C,EAD0CA,SAAUC,EACpD,EADoDA,SAExD,OACE,6BAAS4D,UAAWC,IAAOH,gBACzB,6BACE,4BACGpC,EADH,MACYX,GAEZ,4BAAKnB,GACL,yBAAKoE,UAAWC,IAAOlE,MACrB,yBACEmE,KD/BgBH,EC+BClE,ED9BrB,mCAAN,OAA0CkE,EAA1C,SC+BUC,UAAWC,IAAOpE,KAClBsE,IAAI,iBAELR,EAAgB5D,KAGrB,yBAAKiE,UAAWC,IAAOG,MACrB,4BACE,sDAAyBT,EAAgBzD,IACzC,sDAAyByD,EAAgB1D,IACzC,wDAAwB0D,EAAgB3D,KAE1C,4BACE,2CAAcG,EAAd,SACA,wCAAcC,EAAd,SCTKiE,EAnCgB,WAAO,IAAD,EAU/BC,qBAAW1C,GARbL,EAFiC,EAEjCA,UACAC,EAHiC,EAGjCA,MAHiC,IAIjCF,YACE7B,EAL+B,EAK/BA,QACA0B,EAN+B,EAM/BA,KACAxB,EAP+B,EAO/BA,KACOoB,EARwB,EAQ/BF,IAAOE,QAIX,OAAIQ,EACK,2CAELC,EAEA,4BACiB,QAAdA,EAAMJ,IACH,0BACA,oCAMR,kBAAC,EAAD,CACEL,QAASA,EACTtB,QAASA,EAAQ,GACjBiC,KAAMP,EACNxB,KAAMA,K,iBCxBG4E,EAJO,SAAC,GAAkB,IAAhBxC,EAAe,EAAfA,SACvB,OAAO,6BAASiC,UAAWC,IAAOM,KAAMxC,I,QCuB3ByC,EAtBO,WAAO,IAAD,EAMtBF,qBAAW1C,GANW,IAExBN,YACEhC,MAASC,EAHa,EAGbA,IAAKC,EAHQ,EAGRA,IAIlB,OAP0B,EAKxB+B,UAGO,gDAGP,yBAAKkD,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACpC,kBAAC,IAAD,CACEC,iBAAkB,CAAEC,IAjBVlC,2CAkBVmC,YAhBK,GAiBLC,cAAe,CAAEC,IAAK,EAAGxF,IAAK,GAC9ByF,OAAQ,CAAED,IAAKzF,EAAKC,W,kCCOb0F,EA3Ba,WAAO,IACzBzD,EAAkB6C,qBAAW1C,GAA7BH,cACF0D,EAAcC,iBAAyB,MAU7C,OACE,yBAAKpB,UAAU,aACb,0BAAMA,UAAWC,IAAOiB,UAAWG,SAVtB,SAACC,GAChBA,EAAEC,iBACEJ,EAAYK,UACd/D,EAAc0D,EAAYK,QAAQ9B,OAClCyB,EAAYK,QAAQ9B,MAAQ,MAO1B,2BACE5C,KAAK,OACLK,KAAK,SACLzB,GAAG,SACH+F,YAAY,uBACZC,IAAKP,OCZAQ,EARU,WACvB,OACE,yBAAK3B,UAAWC,IAAO0B,QACrB,kBAAC,EAAD,QCgBSC,EAhBO,WACpB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,yBAAK5B,UAAU,aACb,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,KACE,kBAAC,EAAD,UCXV6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCR1B9G,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,KAAO,6BAA6B,KAAO,gC","file":"static/js/main.c5b6f07e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"Box_Box__3qlgg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__1eUjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2XOcH\"};","import { IWeatherContextStore, WeatherDataModel } from \"./types\";\r\n\r\nexport const initialWeatherState: WeatherDataModel = {\r\n  coord: {\r\n    lon: 0,\r\n    lat: 0,\r\n  },\r\n  weather: [\r\n    {\r\n      id: 0,\r\n      main: \"\",\r\n      description: \"\",\r\n      icon: \"\",\r\n    },\r\n  ],\r\n  base: \"\",\r\n  main: {\r\n    temp: 0,\r\n    feels_like: 0,\r\n    temp_min: 0,\r\n    temp_max: 0,\r\n    pressure: 0,\r\n    humidity: 0,\r\n  },\r\n  visibility: 0,\r\n  wind: {\r\n    speed: 0,\r\n    deg: 0,\r\n    gust: 0,\r\n  },\r\n  clouds: {\r\n    all: 0,\r\n  },\r\n  dt: 0,\r\n  sys: {\r\n    type: 0,\r\n    id: 0,\r\n    country: \"\",\r\n    sunrise: 0,\r\n    sunset: 0,\r\n  },\r\n  timezone: 0,\r\n  id: 0,\r\n  name: \"\",\r\n  cod: 0,\r\n};\r\n\r\nexport const initialWeatherAPIState: IWeatherContextStore = {\r\n  weatherData: initialWeatherState,\r\n  isLoading: false,\r\n  error: null,\r\n  setSearchCity: (city) => {\r\n    throw new Error(\r\n      `Has buscado ${city}, pero el hook de estado 'setSearchCity' no ha sido instanciado`\r\n    );\r\n  },\r\n};\r\n","import React, { createContext, useState, useEffect, useMemo } from \"react\";\r\nimport {\r\n  WeatherDataModel,\r\n  WeatherAPIError,\r\n  IWeatherContextStore,\r\n} from \"./types\";\r\nimport {\r\n  initialWeatherAPIState,\r\n  initialWeatherState,\r\n} from \"./initialWeatherState\";\r\nimport { getWeatherFactory } from \"./axios\";\r\n\r\nexport const WeatherAPIContext = createContext<IWeatherContextStore>(\r\n  initialWeatherAPIState\r\n);\r\n\r\n// desde acá defino la ciudad que se carga al iniciar la app, hasta que ponga la api de geolocalización\r\nconst initialCity = \"buenos aires\";\r\n\r\n// esto es un context que obtiene datos de la api de clima de openweather\r\n// decidí usar un par de useStates en vez de useReducer porque en este caso la app es simple y ocupa menos espacio,\r\n// de esta forma tiene menos boilerplate\r\nconst WeatherAPIContextProvider: React.FC = ({ children }) => {\r\n  const [weatherData, setWeatherData] = useState<WeatherDataModel>(\r\n    initialWeatherState\r\n  );\r\n\r\n  const [isLoading, setLoadingState] = useState(true);\r\n\r\n  const [error, setError] = useState<WeatherAPIError | null>(null);\r\n\r\n  // este es el estado del formulario de busqueda, lo pongo acá para poder usar el useEffect\r\n  const [searchCity, setSearchCity] = useState(initialCity);\r\n\r\n  // se ejecuta al primer render y actualiza los datos cada vez que cambia el valor del formulario de busqueda\r\n  useEffect(() => {\r\n    const getWeather = getWeatherFactory(\r\n      setError,\r\n      setLoadingState,\r\n      setWeatherData\r\n    );\r\n    // llamado a la api de openweather con axios, maneja el estado de cargando y de errores tambien, aprovechando la api de promesas\r\n    getWeather(searchCity);\r\n  }, [searchCity]);\r\n\r\n  // uso useMemo para no reinstanciar weatherData en cada render\r\n  // como este componente tiene funcionalidades asíncronas, se va a renderizar incluso cuando no hayan nuevos datos\r\n  const store = useMemo(\r\n    () => ({\r\n      weatherData,\r\n      isLoading,\r\n      error,\r\n      setSearchCity,\r\n    }),\r\n    [error, isLoading, weatherData, setSearchCity]\r\n  );\r\n\r\n  return (\r\n    <WeatherAPIContext.Provider value={store}>\r\n      {children}\r\n    </WeatherAPIContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WeatherAPIContextProvider;\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { WeatherAPIError, WeatherDataModel } from \"./types\";\r\n\r\n// saco la url y las keys del entorno\r\n\r\nconst weatherApiUrl =\r\n  process.env.REACT_APP_WEATHER_API ||\r\n  \"http://api.openweathermap.org/data/2.5/weather\";\r\n\r\nconst weatherAPIKey = process.env.REACT_APP_WEATHER_API_KEY;\r\n\r\nconst weatherAPILang = process.env.REACT_APP_WEATHER_API_LANG;\r\n\r\n// función factory que toma callbacks como argumentos, para ser llamados en la promesa de axios\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getWeatherFactory = (\r\n  errorSetter: (error: WeatherAPIError | null) => void,\r\n  loadingSetter: (isLoading: boolean) => void,\r\n  weatherDataSetter: (weatherData: WeatherDataModel) => void\r\n) => (city: string): void => {\r\n  loadingSetter(true);\r\n  axios\r\n    .get(weatherApiUrl, {\r\n      params: { q: city, appid: weatherAPIKey, lang: weatherAPILang },\r\n    })\r\n    .then((res: AxiosResponse<WeatherDataModel>) => {\r\n      weatherDataSetter(res.data);\r\n      errorSetter(null);\r\n    })\r\n    .catch((err: AxiosError<WeatherAPIError>) => {\r\n      if (err.response) {\r\n        errorSetter(err.response.data);\r\n      }\r\n    })\r\n    .finally(() => loadingSetter(false));\r\n};\r\n","// eslint-disable-next-line import/prefer-default-export\r\n// esta funcion toma como parametro el código de un ícono y devuelve la url de su ubicación en openweather\r\nexport const makeIconUrl = (iconcode: string): string => {\r\n  return `http://openweathermap.org/img/w/${iconcode}.png`;\r\n};\r\n\r\nexport const kelvinToCelsius = (kelvin: number): string => {\r\n  const celsius = kelvin - 273.15;\r\n  return `${celsius.toFixed(2)} °C`;\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  MainWeatherData,\r\n  WeatherDescription,\r\n} from \"../../../services/WeatherAPIContext/types\";\r\nimport styles from \"./WeatherDisplay.module.css\";\r\nimport {\r\n  makeIconUrl,\r\n  kelvinToCelsius,\r\n} from \"../../../services/WeatherAPIContext/helpers\";\r\n\r\ninterface IWeatherDisplayProps {\r\n  weather: WeatherDescription;\r\n  city: string;\r\n  country: string;\r\n  main: MainWeatherData;\r\n}\r\n\r\nconst WeatherDisplay: React.FC<IWeatherDisplayProps> = ({\r\n  weather: { description, icon },\r\n  city,\r\n  country,\r\n  main: { temp, temp_max, temp_min, feels_like, pressure, humidity },\r\n}) => {\r\n  return (\r\n    <article className={styles.WeatherDisplay}>\r\n      <div>\r\n        <h1>\r\n          {city} | {country}\r\n        </h1>\r\n        <h2>{description}</h2>\r\n        <div className={styles.temp}>\r\n          <img\r\n            src={makeIconUrl(icon)}\r\n            className={styles.icon}\r\n            alt=\"Weather Icon\"\r\n          />\r\n          {kelvinToCelsius(temp)}\r\n        </div>\r\n      </div>\r\n      <div className={styles.list}>\r\n        <ul>\r\n          <li>Temperatura Máxima: {kelvinToCelsius(temp_max)}</li>\r\n          <li>Temperatura Mínima: {kelvinToCelsius(temp_min)}</li>\r\n          <li>Sensación Térmica: {kelvinToCelsius(feels_like)}</li>\r\n        </ul>\r\n        <ul>\r\n          <li>Presión: {pressure} mbar</li>\r\n          <li>Humedad: {humidity}%</li>\r\n        </ul>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default WeatherDisplay;\r\n","import React, { useContext } from \"react\";\r\nimport { WeatherAPIContext } from \"../../services/WeatherAPIContext\";\r\nimport WeatherDisplay from \"./WeatherDisplay\";\r\n\r\nconst WeatherPanel: React.FC = () => {\r\n  const {\r\n    isLoading,\r\n    error,\r\n    weatherData: {\r\n      weather,\r\n      name,\r\n      main,\r\n      sys: { country },\r\n    },\r\n  } = useContext(WeatherAPIContext);\r\n\r\n  if (isLoading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n  if (error) {\r\n    return (\r\n      <h1>\r\n        {error.cod === \"404\"\r\n          ? \"Ciudad no encontrada...\"\r\n          : \"Ha habido un error inesperado...\"}\r\n      </h1>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <WeatherDisplay\r\n      country={country}\r\n      weather={weather[0]}\r\n      city={name}\r\n      main={main}\r\n    />\r\n  );\r\n};\r\n\r\nexport default WeatherPanel;\r\n","import React from \"react\";\r\nimport styles from \"./Box.module.css\";\r\n\r\n// Este componente solamente sirve para estilizar, devuelve un section con forma de caja blanca\r\n// desactivo proptypes porque children viene con React.FC y no me lo está detectando ESLint\r\n// eslint-disable-next-line react/prop-types\r\nconst Box: React.FC = ({ children }) => {\r\n  return <section className={styles.Box}>{children}</section>;\r\n};\r\n\r\nexport default Box;\r\n","import React, { useContext } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { WeatherAPIContext } from \"../../services/WeatherAPIContext\";\r\n\r\nconst mapApiKey = process.env.REACT_APP_MAP_API_KEY || \"\";\r\n\r\nconst zoom = 13;\r\n\r\nconst Map: React.FC = () => {\r\n  const {\r\n    weatherData: {\r\n      coord: { lon, lat },\r\n    },\r\n    isLoading,\r\n  } = useContext(WeatherAPIContext);\r\n  if (isLoading) {\r\n    return <h1>Cargando mapa...</h1>;\r\n  }\r\n  return (\r\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: mapApiKey }}\r\n        defaultZoom={zoom}\r\n        defaultCenter={{ lng: 0, lat: 0 }}\r\n        center={{ lng: lon, lat }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { SyntheticEvent, useContext, useRef } from \"react\";\r\nimport { WeatherAPIContext } from \"../../../services/WeatherAPIContext\";\r\nimport styles from \"./Searchbar.module.css\";\r\n\r\nconst Searchbar: React.FC = () => {\r\n  const { setSearchCity } = useContext(WeatherAPIContext);\r\n  const searchInput = useRef<HTMLInputElement>(null);\r\n\r\n  const onSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (searchInput.current) {\r\n      setSearchCity(searchInput.current.value);\r\n      searchInput.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className={styles.Searchbar} onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"search\"\r\n          id=\"search\"\r\n          placeholder=\"Buscar una ciudad...\"\r\n          ref={searchInput}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport styles from \"./Navbar.module.css\";\r\nimport Searchbar from \"./Searchbar\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  return (\r\n    <nav className={styles.Navbar}>\r\n      <Searchbar />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport WeatherPanel from \"./components/WeatherPanel\";\r\nimport Box from \"./components/Layout/Box\";\r\nimport Map from \"./components/Map\";\r\nimport WeatherAPIContextProvider from \"./services/WeatherAPIContext\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <WeatherAPIContextProvider>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Box>\r\n          <WeatherPanel />\r\n        </Box>\r\n        <Box>\r\n          <Map />\r\n        </Box>\r\n      </div>\r\n    </WeatherAPIContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherDisplay\":\"WeatherDisplay_WeatherDisplay__1us2y\",\"temp\":\"WeatherDisplay_temp__3UHH7\",\"list\":\"WeatherDisplay_list__33H1V\"};"],"sourceRoot":""}